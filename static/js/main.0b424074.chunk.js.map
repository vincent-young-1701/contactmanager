{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","console","log","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b424074.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n      }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action))\n    }\n  };\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n\n    this.setState({\n      contacts: res.data\n    })\n  }\n  componentDidUpdate() {\n    console.log(\"Component did update\");\n  }\n  componentWillUpdate() {\n    console.log(\"Component will update\");\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    })\n  }\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  }\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>{name}{' '}\n                <i\n                  onClick={() =>\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    })}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}></i>\n                <i className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i className=\"fas fa-pencil-alt\" style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }}></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }\n\n        }\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;","import React, { Component } from 'react'\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> list</h1>\n              {contacts.map(contact => (\n                <Contact contact={contact} key={contact.id} />\n              ))\n              }\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\">Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\">Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\">About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: \"My App\"\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input name={name} placeholder={placeholder} type={type} className={classnames('form-control form-control-lg', {\n        'is-invalid': error\n      })} value={value} onChange={onChange} />\n      {error &&\n        <div className=\"invalid-feedback\">\n          {error}\n        </div>}\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {\n\n    }\n  }\n\n  onChange = e => this.setState({\n    [e.target.name]: e.target.value\n  })\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'name is required'\n        }\n      })\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      })\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is required'\n        }\n      })\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios\n      .post('https://jsonplaceholder.typicode.com/users/', newContact);\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\" >\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name} />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email} />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone} />\n                  <input type=\"submit\" value=\"Add\" className=\"btn btn-block\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {\n\n    }\n  }\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({\n    [e.target.name]: e.target.value\n  })\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({\n        errors: {\n          name: 'name is required'\n        }\n      })\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: {\n          email: 'Email is required'\n        }\n      })\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: 'Phone is required'\n        }\n      })\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\" >\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name} />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email} />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone} />\n                  <input type=\"submit\" value=\"Edit\" className=\"btn btn-block\" />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;","import React from 'react'\n\nexport default props => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span>About Contact Manager</span>\n        <span>{props.match.params.id}</span>\n      </h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0</p>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\n      <p className=\"lead\">Sorry, that page does not exist.</p>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <main className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </main>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}